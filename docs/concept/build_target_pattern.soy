{namespace buck.buildtargetpattern}

/***/
{template .soyweb}
  {call buck.page}
    {param title: 'Build Target Pattern' /}
    {param navid: 'concept_build_target_pattern' /}
    {param description}
      A string that describes a set of one or more build targets.
    {/param}
    {param content}

<p>
A <em>build target pattern</em> is a string that describes a set of one or
more {call buck.build_target /}s. Build target patterns are used as command-line arguments 
to {call buck.cmd_build /}, and in the lists of values provided to the
<code>deps</code> and <code>visibility</code> arguments of your build
rules.
</p>

<p>
The most simple build target pattern matches the build target of same name:
</p>

{literal}<pre>
# Matches '//apps/myapp:app'.
'//apps/myapp:app'
{/literal}</pre>

<p>
A build target pattern that ends with a colon matches any build
targets that identify rules in the same build file:
</p>

{literal}<pre>
# Matches '//apps/myapp:app_debug' and '//apps/myapp:app_release'.
'//apps/myapp:'
{/literal}</pre>

<p>
A build target pattern that ends with <code>/...</code> matches any
build target in the build file in the current directory and any build
targets in build files in subdirectories: 
</p>

{literal}<pre>
# Matches '//apps:common' and '//apps/myapp:app'.
'//apps/...'
{/literal}</pre>

    {/param}
  {/call}
{/template}
